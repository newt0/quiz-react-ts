[{"/Users/newt0/dev/ts/quiz-react-ts/src/App.tsx":"1","/Users/newt0/dev/ts/quiz-react-ts/src/index.tsx":"2","/Users/newt0/dev/ts/quiz-react-ts/src/components/QuestionCard.tsx":"3","/Users/newt0/dev/ts/quiz-react-ts/src/API.ts":"4","/Users/newt0/dev/ts/quiz-react-ts/src/utils.ts":"5"},{"size":1372,"mtime":1606274794451,"results":"6","hashOfConfig":"7"},{"size":197,"mtime":1606271281915,"results":"8","hashOfConfig":"7"},{"size":800,"mtime":1606274000915,"results":"9","hashOfConfig":"7"},{"size":784,"mtime":1606277375692,"results":"10","hashOfConfig":"7"},{"size":92,"mtime":1606277382677,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"pabddc",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/newt0/dev/ts/quiz-react-ts/src/App.tsx",["23","24","25","26","27","28","29","30","31","32","33","34","35","36"],"import React, { useState } from \"react\";\nimport { fetchQuizQuestions } from \"./API\";\nimport QuestionCard from \"./components/QuestionCard\";\nimport { Difficulty } from \"./API\";\nconst TOTAL_QUESTIONS = 10;\n\nconst App = () => {\n  const [loading, setLoading] = useState(false),\n    [questions, setQuestions] = useState([]),\n    [number, setNumber] = useState(0),\n    [userAnswers, setUserAnswers] = useState([]),\n    [score, setScore] = useState(0),\n    [gameOver, setGameOver] = useState(true);\n\n  console.log(\n    \"fetchQuiz\",\n    fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY)\n  );\n\n  const startTrivia = async () => {};\n\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {};\n\n  const nextQuestion = () => {};\n\n  return (\n    <div>\n      <h1>React Quiz</h1>\n      <button className=\"start\" onClick={startTrivia}>\n        Start\n      </button>\n      <p className=\"score\">Score:</p>\n      <p>Loading Questions ...</p>\n      {/* <QuestionCard\n        questionNumber={number + 1}\n        totalQuestions={TOTAL_QUESTIONS}\n        question={questions[number].question}\n        answers={questions[number].answers}\n        userAnswer={userAnswers ? userAnswers[number] : undefined}\n        callback={checkAnswer}\n      /> */}\n      <button className=\"next\" onClick={nextQuestion}>\n        Next Questions\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n","/Users/newt0/dev/ts/quiz-react-ts/src/index.tsx",[],"/Users/newt0/dev/ts/quiz-react-ts/src/components/QuestionCard.tsx",[],"/Users/newt0/dev/ts/quiz-react-ts/src/API.ts",[],"/Users/newt0/dev/ts/quiz-react-ts/src/utils.ts",[],{"ruleId":"37","severity":1,"message":"38","line":3,"column":8,"nodeType":"39","messageId":"40","endLine":3,"endColumn":20},{"ruleId":"37","severity":1,"message":"41","line":8,"column":10,"nodeType":"39","messageId":"40","endLine":8,"endColumn":17},{"ruleId":"37","severity":1,"message":"42","line":8,"column":19,"nodeType":"39","messageId":"40","endLine":8,"endColumn":29},{"ruleId":"37","severity":1,"message":"43","line":9,"column":6,"nodeType":"39","messageId":"40","endLine":9,"endColumn":15},{"ruleId":"37","severity":1,"message":"44","line":9,"column":17,"nodeType":"39","messageId":"40","endLine":9,"endColumn":29},{"ruleId":"37","severity":1,"message":"45","line":10,"column":6,"nodeType":"39","messageId":"40","endLine":10,"endColumn":12},{"ruleId":"37","severity":1,"message":"46","line":10,"column":14,"nodeType":"39","messageId":"40","endLine":10,"endColumn":23},{"ruleId":"37","severity":1,"message":"47","line":11,"column":6,"nodeType":"39","messageId":"40","endLine":11,"endColumn":17},{"ruleId":"37","severity":1,"message":"48","line":11,"column":19,"nodeType":"39","messageId":"40","endLine":11,"endColumn":33},{"ruleId":"37","severity":1,"message":"49","line":12,"column":6,"nodeType":"39","messageId":"40","endLine":12,"endColumn":11},{"ruleId":"37","severity":1,"message":"50","line":12,"column":13,"nodeType":"39","messageId":"40","endLine":12,"endColumn":21},{"ruleId":"37","severity":1,"message":"51","line":13,"column":6,"nodeType":"39","messageId":"40","endLine":13,"endColumn":14},{"ruleId":"37","severity":1,"message":"52","line":13,"column":16,"nodeType":"39","messageId":"40","endLine":13,"endColumn":27},{"ruleId":"37","severity":1,"message":"53","line":22,"column":9,"nodeType":"39","messageId":"40","endLine":22,"endColumn":20},"@typescript-eslint/no-unused-vars","'QuestionCard' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'questions' is assigned a value but never used.","'setQuestions' is assigned a value but never used.","'number' is assigned a value but never used.","'setNumber' is assigned a value but never used.","'userAnswers' is assigned a value but never used.","'setUserAnswers' is assigned a value but never used.","'score' is assigned a value but never used.","'setScore' is assigned a value but never used.","'gameOver' is assigned a value but never used.","'setGameOver' is assigned a value but never used.","'checkAnswer' is assigned a value but never used."]